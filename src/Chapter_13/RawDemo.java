package Chapter_13;

// Демонстрация использования базового типа

public class RawDemo
{
    static class Gen<T>
    {
        T ob;  // объявить объект типа T

        // Передать конструктору ссылку на объект типа T
        Gen(T o)
        {
            ob = o;
        }

        // Вернуть объект ob
        T getOb()
        {
            return ob;
        }
    }

    // Продемонстрировать использование базового типа
    public static void main(String[] args)
    {
        // Создать объект класса Gen для типа Integer
        Gen<Integer> iOb = new Gen<>(88);

        // Создать объект класса gen для типа String
        Gen<String> strOb = new Gen<>("Тестирование обобщений");

        // Создать базовый объект класса Gen
        // и передать ему значение типа Double
        Gen raw = new Gen(new Double(98.6));  // если аргумент типа не предоставляется, создается базовый тип

        // Здесь требуется приведение типов, так как тип неизвестен
        double d = (double) raw.getOb();
        System.out.println("Значение d: " + d);

        /*
            Использование базового типа может привести
            к исключениям времени выполнения.
            Соответствующие примеры представлены ниже.
         */

        // Следующее приведение типов вызывает ошибку времени выполнения!
        // int i = (int) raw.getOb();

        // Это присваивание нарушает безопасность типов
        strOb = raw;  // допустимо, но потенциально неверно (безопасность использования базового типа не проверяется)
        // String str = strOb.getOb();  // ошибка времени выполнения

        // Следующее присваивание также нарушает безопасность типов
        raw = iOb;  // допустимо, но потенциально неверно
        // d = (Double) raw.getOb();  // ошибка времени выполнения
    }
}