1:
    В Java строго определены диапазоны допустимых значений и области дейстия простых типов для того,
     что бы обеспечить переносимость, и возможность запуска на других JVM, без переписывания кода.

2:
    Символы в Java не являются 8-битовыми значениями. Вместо этого используется кодировка Unicode,
     позволяющая представлять символы всех письменных языков. Тип 'char' хранит 16-разрядное значение без знака
     в диапазоне от 0 до 65536, над которым можно производить различные арифметические операции.

3:
    Неверно. Переменная типа boolean может хранить либо true либо false.

4:
    PrintlnInLine.java

5:
    Ошибка: использование переменной в не зоны её видимости (действия)
     - за циклом for, int sum уже не будет доступно.
     Для решения этой ошибки, достаточно перенести объявление переменной int sum перед циклом for.

6:
    Префиксная форма записи, например:
        y = 10;
        x = ++y;
        Здесь, x будет присвоено значение 11 - произойдет изменение значения операнда до его использования.
        Т.е. сначало к y будет прибавлено +1, а уже потом присвоено значение переменной x.

    В постфиксной форме записи все наоборот:
        y = 10;
        x = y++;
        Здесь, x будет равен 10 - произойдет изменение значения операнда после его использования.
        Т.е. сначало x присвоется значение y (10), а уже потом к y прибавится +1.

7:
    PreventZero.java

8:
    Типы byte и short повышаются до типа double (max. уровень) при вычислении выражения.

9:
    Потребность в явном приведении типов возникает в том случае,
     когда автоматическое преобразование типов перестает работать,
     например когда нужно преобразовать double в int:
     double a = 3.5;
     int b = (int) a;
     Здесь b будет равно 3, т.к. дробная часть отсекается.

10:
    PrimeNumbers.java

11:
    Лишние скобки не влияют на эффективность выполнения программ.

12:
    Да, блок кода определяет область действия переменных.